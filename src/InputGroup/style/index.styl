/*
 * ADOBE CONFIDENTIAL
 *
 * Copyright 2013 Adobe Systems Incorporated
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 */

@require '../../commons'

$spectrum-inputgroup-trigger-width = 32*$px;
$spectrum-inputgroup-trigger-width-quiet = 12*$px;
$spectrum-combobox-alert-width = 32*$px;

.coral-InputGroup {
  // for dropdowns
  position: relative;
  display: inline-flex; // All field needs to be inline-block-like.
  vertical-align: top;
  // prevent input groups from inheriting border styles from table cells when placed within a table
  border-collapse: separate;
  width: $spectrum-component-single-line-width;

  .spectrum-DecoratedTextfield-icon {
    z-index: 5;
  }

  .coral-InputGroup-button.spectrum-Button {
    // position for bringing hovered/focused/actived element above the siblings.
    position: relative; // Needed for z-index to function.
    margin: 0;
    border-radius: 0;
    border-width: 1*$px;
    min-width: $spectrum-inputgroup-trigger-width;
    padding: 0;

    // Brings the interaction to the front. z-index: 2 so it comes in front
    // of neighboring elements with invalid state styles.
    &:focus,
    &:active {
      z-index: 2;
    }
  }

  .coral-InputGroup-input {
    border-radius: $spectrum-border-radius 0 0 $spectrum-border-radius;
    z-index: 2;
    flex: 1;

    // Invalid border should come on top, but it should not come above
    // the borders of sibling elements that have focus.
    &.is-invalid,
    &:invalid,
    &:focus {
      z-index: 1
    }

    &~ .coral-InputGroup-button {
      border-radius: 0 $spectrum-border-radius $spectrum-border-radius 0;
      border-left-width: 0 !important;
    }
  }

  &.is-focused {
    .coral-InputGroup-input,
    .coral-InputGroup-button {
      // Box shadow is on the input group
      box-shadow: none;
    }
  }

  &.is-invalid {
    .coral-InputGroup-input {
      padding-right: $spectrum-combobox-alert-width;
    }

    &:after {
      position: absolute;
      top: 0;
      right: $spectrum-inputgroup-trigger-width;
      z-index: 3000;

      width: $spectrum-combobox-alert-width;
      height: 100%;

      content: '';

      background-repeat: no-repeat;
      background-position: center center;
    }
  }
}

.coral-InputGroup--block {
  display: flex;
  width: 100%;
}

.coral-Form--vertical .coral-Form-field.coral-InputGroup {
  display: table;
  width: 100%;
}

.coral-InputGroup--quiet {
  .spectrum-DecoratedTextfield-icon {
    margin-left: 0;
  }

  .coral-InputGroup-button.spectrum-Button {
    min-width: $spectrum-inputgroup-trigger-width-quiet;
  }

  .coral-InputGroup-input,
  .coral-InputGroup-button {
    // Remove border
    border-top: none;
    border-left: none;
    border-right: none;
    border-radius: 0 !important;
    background: transparent;

    &:disabled {
      background: transparent;
    }
  }

  &.is-invalid {
    &:after {
      right: $spectrum-inputgroup-trigger-width-quiet;
    }
  }
}

@require 'light.styl'
@require 'dark.styl'
