/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import '../commons/index.css';
@import '../button/index.css';

:root {
  --spectrum-stepper-button-height: calc(var(--spectrum-component-single-line-height) / 2);
  --spectrum-stepper-button-width: 24px;
  --spectrum-stepper-padding: calc(var(--spectrum-padding) / 2);
  --spectrum-stepper-border-radius-reset: 0;
  --spectrum-stepper-border-size-reset: 0;
  --spectrum-stepper-border-size-default: 1px;
  --spectrum-stepper-input-min-width: var(--spectrum-component-single-line-height);
  --spectrum-stepper-default-width-desktop: calc(var(--spectrum-component-single-line-height) * 4);
  --spectrum-stepper-default-width-mobile: calc(var(--spectrum-component-single-line-height) * 5);
}

/* increase specificity to not collide with InputGroup */
.spectrum-Stepper.spectrum-Stepper {
  display: inline-grid;
  grid-template-rows: auto auto;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    'field increment'
    'field decrement';

  inline-size: var(--spectrum-stepper-default-width-desktop);
  min-inline-size: unset;
  line-height: 0;
  border-radius: var(--spectrum-border-radius);
  transition: border-color var(--spectrum-global-animation-duration-100) ease-in-out, box-shadow var(--spectrum-global-animation-duration-100) ease-in-out;
}

.spectrum-Stepper {
  &:not(.spectrum-Stepper--quiet):not(.spectrum-Stepper--showStepper) {
    .spectrum-Stepper-input {
      border-inline-end-width: var(--spectrum-stepper-border-size-default);
      border-inline-end-style: solid;
      border-start-end-radius: var(--spectrum-border-radius);
      border-end-end-radius: var(--spectrum-border-radius);
    }

    &.is-disabled .spectrum-Stepper-input {
      border-inline-end-width: 0px;
    }
  }

  &.is-disabled:not(.spectrum-Stepper--quiet):not(.is-invalid) {
    .spectrum-Stepper-input {
      border: none;
    }
  }

  &.is-disabled.is-invalid:not(.spectrum-Stepper--quiet):not(.spectrum-Stepper--showStepper) {
    .spectrum-Stepper-input {
      border-inline-end-width: 1px;
      border-inline-end-style: solid;
    }
  }
}

.spectrum-Stepper-container {
  /* ensure we have higher specificity than .spectrum-Field */
  &.spectrum-Stepper-container {
    /* override the default width of the field container, only with labelPosition=top. */
    --spectrum-field-default-width: var(--spectrum-stepper-default-width-desktop);
  }

  &.spectrum-Stepper-container--isMobile {
    --spectrum-field-default-width: var(--spectrum-stepper-default-width-mobile);
  }
}

.spectrum-Stepper-button {
  @inherit: %spectrum-BaseButton;

  block-size: var(--spectrum-stepper-button-height);
  inline-size: var(--spectrum-stepper-button-width);

  display: flex;

  border-style: solid;
  border-width: var(--spectrum-stepper-border-size-default);

  padding: var(--spectrum-button-padding-y) calc(var(--spectrum-button-primary-padding-x) - var(--spectrum-button-primary-border-size));

  font-size: var(--spectrum-button-primary-text-size);
  font-weight: var(--spectrum-button-primary-text-font-weight);

  &:hover,
  &:active {
    box-shadow: none;
  }

  .spectrum-Stepper-icon {
    max-block-size: 100%;
    flex-shrink: 0;
    order: 0; /* always be before the label, regardless of DOM order */

    transition: background var(--spectrum-global-animation-duration-100) ease-out,
                fill var(--spectrum-global-animation-duration-100) ease-out;
    box-sizing: initial;
  }
}

.spectrum-Stepper {
  .spectrum-Stepper-button--stepUp {
    grid-area: increment;
    border-start-end-radius: var(--spectrum-border-radius);
    padding-block-start: calc(var(--spectrum-button-padding-y) + 1px);
    padding-block-end: calc(var(--spectrum-button-padding-y) - .5px);
  }

  .spectrum-Stepper-button--stepDown {
    grid-area: decrement;
    border-block-start: none;
    border-end-end-radius: var(--spectrum-border-radius);
    padding-block-end: calc(var(--spectrum-button-padding-y) + 1px);
    padding-block-start: calc(var(--spectrum-button-padding-y) - .5px);

    &:focus {
      border-block-start: none;
    }
  }
  .spectrum-Stepper-field {
    grid-area: field;

    inline-size: unset;
    min-inline-size: var(--spectrum-stepper-input-min-width);
  }
}

.spectrum-Stepper--showStepper {
  .spectrum-Stepper-input {
    position: relative;

    border-start-end-radius: var(--spectrum-stepper-border-radius-reset);
    border-end-end-radius: var(--spectrum-stepper-border-radius-reset);
  }

  &.spectrum-Stepper--isMobile {
    grid-template-rows: auto;
    grid-template-columns: auto 1fr auto;
    grid-template-areas: 'decrement field increment';
    inline-size: var(--spectrum-stepper-default-width-mobile);

    &:not(.spectrum-Stepper--quiet):not(.is-disabled),
    &:not(.spectrum-Stepper--quiet).is-invalid {
      .spectrum-Stepper-input {
        border-inline-end-width: 1px;
        border-inline-end-style: solid;
      }
    }

    .spectrum-Stepper-input {
      border-start-start-radius: var(--spectrum-stepper-border-radius-reset);
      border-start-end-radius: var(--spectrum-stepper-border-radius-reset);
      border-end-start-radius: var(--spectrum-stepper-border-radius-reset);
      border-end-end-radius: var(--spectrum-stepper-border-radius-reset);
    }
    .spectrum-Stepper-button {
      block-size: var(--spectrum-textfield-height);
      inline-size: var(--spectrum-actionbutton-min-width);
      border-block-start-style: solid;
      border-block-start-width: var(--spectrum-stepper-border-size-default);
      padding-block-end: 0px;
      padding-block-start: 0px;
    }
    .spectrum-Stepper-button--stepUp {
      border-inline-end-style: solid;
      border-inline-start-style: none;
      border-start-start-radius: var(--spectrum-stepper-border-radius-reset);
      border-start-end-radius: var(--spectrum-border-radius);
      border-end-start-radius: var(--spectrum-stepper-border-radius-reset);
      border-end-end-radius: var(--spectrum-border-radius);
    }
    .spectrum-Stepper-button--stepDown {
      border-inline-start-style: solid;
      border-inline-end-style: none;
      border-start-start-radius: var(--spectrum-border-radius);
      border-start-end-radius: var(--spectrum-stepper-border-radius-reset);
      border-end-start-radius: var(--spectrum-border-radius);
      border-end-end-radius: var(--spectrum-stepper-border-radius-reset);
    }
  }
}

.spectrum-Stepper.spectrum-Stepper--quiet {
  border-radius: var(--spectrum-stepper-border-radius-reset);

  .spectrum-Stepper-button {
    border-block-start: none;
    border-inline-start: none;
    border-inline-end: none;
    border-start-start-radius: var(--spectrum-stepper-border-radius-reset);
    border-start-end-radius: var(--spectrum-stepper-border-radius-reset);
    border-end-start-radius: var(--spectrum-stepper-border-radius-reset);
    border-end-end-radius: var(--spectrum-stepper-border-radius-reset);
  }
  &:not(.spectrum-Stepper--isMobile) .spectrum-Stepper-button--stepUp {
    border-block-end: none;
  }
  &:focus {
    .spectrum-Stepper-button {
      border-block-start: none;
      border-inline-start: none;
      border-inline-end: none;
    }
  }
}
