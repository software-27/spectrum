/* A solid star */
.spectrum-Rating:hover .spectrum-Rating-icon .spectrum-Rating-starActive,
.spectrum-Rating-icon.is-selected .spectrum-Rating-starActive {
    display: block;
  }
.spectrum-Rating:hover .spectrum-Rating-icon .spectrum-Rating-starInactive,
.spectrum-Rating-icon.is-selected .spectrum-Rating-starInactive {
    display: none;
  }
/* A star with an outline only */
.spectrum-Rating-icon .spectrum-Rating-starActive,
.spectrum-Rating-icon:hover ~ .spectrum-Rating-icon .spectrum-Rating-starActive {
    display: none;
  }
.spectrum-Rating-icon .spectrum-Rating-starInactive,
.spectrum-Rating-icon:hover ~ .spectrum-Rating-icon .spectrum-Rating-starInactive {
    display: block;
  }
.spectrum-Rating {
  position: relative;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex: 0 0 auto;
      flex: 0 0 auto;

  width: calc(var(--spectrum-rating-icon-width, var(--spectrum-global-dimension-size-300)) * var(--spectrum-rating-icon-count, 5));

  border-radius: var(--spectrum-rating-border-radius, var(--spectrum-global-dimension-size-50));

  cursor: pointer;
}
.spectrum-Rating.is-disabled,
  .spectrum-Rating.is-readOnly {
    cursor: default;
    pointer-events: none;
  }
/* When the entire component is hovered, show all solid icons */
.spectrum-Rating-input {
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  opacity: 0.0001;
  pointer-events: none;
}
.spectrum-Rating-icon {
  position: relative;
  background-size: contain;
  background-repeat: no-repeat;
  width: var(--spectrum-rating-icon-width, var(--spectrum-global-dimension-size-300));
  height: var(--spectrum-icon-star-height, var(--spectrum-global-dimension-size-225));
  padding: var(--spectrum-rating-icon-padding-y, var(--spectrum-global-dimension-size-75)) 0;
}
.spectrum-Rating-icon.is-currentValue:after {
      border-radius: var(--spectrum-rating-indicator-border-radius, 2px);
      content: '';
      height: var(--spectrum-rating-indicator-height, 2px);
      position: absolute;
      bottom: var(--spectrum-rating-indicator-offset, 1px);
      left: calc((var(--spectrum-rating-icon-width, var(--spectrum-global-dimension-size-300)) - var(--spectrum-rating-indicator-width, var(--spectrum-global-dimension-size-200))) / 2);
      right: calc((var(--spectrum-rating-icon-width, var(--spectrum-global-dimension-size-300)) - var(--spectrum-rating-indicator-width, var(--spectrum-global-dimension-size-200))) / 2);
    }
/* All stars following the hovered star */
.spectrum-Rating-starActive,
.spectrum-Rating-starInactive {
  width: var(--spectrum-icon-star-width, var(--spectrum-global-dimension-size-225));
  height: var(--spectrum-icon-star-width, var(--spectrum-global-dimension-size-225));
  margin: 0 auto;
}
/* topdoc
{{ rating/rating.yml }}
*/
.spectrum-Rating.is-focused {
    box-shadow: 0 0 0 var(--spectrum-global-dimension-static-size-25, 2px) var(--spectrum-rating-focus-ring-color, var(--spectrum-global-color-blue-400));
  }
.spectrum-Rating:hover .spectrum-Rating-icon {
      /* Make all stars colored when the component is hovered */
      color: var(--spectrum-rating-icon-color-selected, var(--spectrum-global-color-blue-500));
    }
.spectrum-Rating:hover .spectrum-Rating-icon:hover {
        /* The icon that's actually hovered is darker */
        color: var(--spectrum-rating-icon-color-hover, var(--spectrum-global-color-blue-600));
      }
.spectrum-Rating:hover .spectrum-Rating-icon:active {
        /* The icon that's actually hovered is darker */
        color: var(--spectrum-rating-icon-color-down, var(--spectrum-global-color-blue-700));
      }
/* Show which star is currently selected */
.spectrum-Rating:hover .spectrum-Rating-icon.is-currentValue:after {
          /* Match the color of the star */
          background: currentColor;
        }
.spectrum-Rating-icon {
  color: var(--spectrum-rating-icon-color, var(--spectrum-global-color-gray-700));
}
.spectrum-Rating-icon.is-selected {
    color: var(--spectrum-alias-icon-color-selected, var(--spectrum-global-color-blue-500));
  }
/* All stars following the hovered star */
.spectrum-Rating-icon:hover ~ .spectrum-Rating-icon {
      color: var(--spectrum-rating-icon-color, var(--spectrum-global-color-gray-700));
    }
.spectrum-Rating--quiet .spectrum-Rating-icon {
    color: var(--spectrum-rating-quiet-icon-color, var(--spectrum-global-color-gray-700));
  }
.spectrum-Rating--quiet .spectrum-Rating-icon.is-selected {
      color: var(--spectrum-rating-quiet-icon-color-selected, var(--spectrum-global-color-gray-700));
    }
.spectrum-Rating--quiet:hover .spectrum-Rating-icon {
      /* Make all stars selected when the component is hovered */
      color: var(--spectrum-rating-quiet-icon-color-selected, var(--spectrum-global-color-gray-700));
    }
.spectrum-Rating--quiet:hover .spectrum-Rating-icon:hover {
        /* The icon that's actually hovered is darker */
        color: var(--spectrum-rating-quiet-icon-color-hover, var(--spectrum-global-color-gray-800));
      }
.spectrum-Rating--quiet:hover .spectrum-Rating-icon:active {
        color: var(--spectrum-rating-quiet-icon-color-down, var(--spectrum-global-color-gray-900));
      }
/* Disabled */
.spectrum-Rating.is-disabled .spectrum-Rating-icon {
      color: var(--spectrum-rating-icon-color-disabled, var(--spectrum-global-color-gray-400));
    }
.spectrum-Rating.is-disabled .spectrum-Rating-icon.is-selected {
        color: var(--spectrum-rating-icon-color-disabled, var(--spectrum-global-color-gray-400));
      }
